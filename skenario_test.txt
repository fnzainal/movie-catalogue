# Skenario instrument test

1. Menampilkan menu about
    - aplikasi terbuka dan menampilkan beberapa view.
    - memastikan menu action_about telah ditampilkan.
    - memastikan tombol action_about dapat diklik
    - memberi tindakan click pada menu id action_about
    - memastikan dialog About tampil
    - memastikan tombol Back dialog tampil
    - memastikan tombol Back dapat diklik
    - memberi tindakan klik pada tombol Back

2. Menampilkan menu open source license
    - aplikasi terbuka dan menampilkan beberapa view.
    - memastikan menu action_open_source telah ditampilkan.
    - memastikan tombol action_open_source dapat diklik
    - memberi tindakan click pada menu id action_open_source
    - memastikan daftar license opensource berhasil ditampilkan

3. Menampilkan data movie
    - aplikasi terbuka dan menampilkan beberapa view.
    - memastikan movie_list_rv tampil pada layar
    - memberi tindakan scroll sampai data terakhir movie_list_rv.
    - memastikan data paling akhir tampil dari list movie_list_rv

4. Menampilkan data tv show
    - aplikasi terbuka dan menampilkan beberapa view.
    - memastikan tab TV SHOW telah ditampilkan.
    - memberi tindakan klik pada tab TV SHOW
    - memastikan tvshow_list_rv telah ditampilkan
    - memberi tindakan scroll sampai data terakhir tvshow_list_rv.
    - memastikan data paling akhir tampil dari list tv show  / tvshow_list_rv

5. Menampilkan detail movie
    - aplikasi terbuka dan menampilkan beberapa view.
    - memastikan movie_list_rv telah ditampilkan.
    - memberi tindakan klik pada movie_list_rv pada posisi ke 3 (index 2)
    - mengecek detail movie yang telah diklik :
        - memastikan detail_title_tv telah ditampilkan
        - memastikan data name yang tampil sesuai ekspektasi
        - memastikan detail_score_tv telah ditampilkan
        - memastikan data voteAverage yang tampil sesuai ekspektasi
        - memastikan detail_genre_tv telah ditampilkan
        - memastikan data genres yang tampil sesuai ekspektasi
        - memastikan detail_year_tv telah ditampilkan
        - memastikan data releaseDate yang tampil sesuai ekspektasi
        - memastikan detail_overview_tv telah ditampilkan
        - memastikan data overview yang tampil sesuai ekspektasi
        - memastikan detail_thumbnail_iv telah ditampilkan
        - memastikan data poster/posterPath yang tampil sesuai ekspektasi

6. Menampilkan detail tv show tampilan
    - aplikasi terbuka dan menampilkan beberapa view.
    - memastikan tab TV SHOW telah ditampilkan.
    - memberi tindakan klik pada tab TV SHOW
    - memberi tindakan klik pada tvshow_list_rv pada posisi 4 (index 3)
    - mengecek detail tvshow yang telah diklik :
        - memastikan detail_title_tv telah ditampilkan
        - memastikan data name yang tampil sesuai ekspektasi
        - memastikan detail_score_tv telah ditampilkan
        - memastikan data voteAverage yang tampil sesuai ekspektasi
        - memastikan detail_genre_tv telah ditampilkan
        - memastikan data genres yang tampil sesuai ekspektasi
        - memastikan detail_year_tv telah ditampilkan
        - memastikan data releaseDate yang tampil sesuai ekspektasi
        - memastikan detail_overview_tv telah ditampilkan
        - memastikan data overview yang tampil sesuai ekspektasi
        - memastikan detail_thumbnail_iv telah ditampilkan
        - memastikan data poster/posterPath yang tampil sesuai ekspektasi

7. Memastikan tampilan data kosong movie
    - aplikasi terbuka dan menampilkan beberapa view.
    - merubah tampilan movie_empty_tv menjadi terlihat
    - memastikan movie_empty_tv ada tampil pada layar
    - merubah tampilan movie_list_rv menjadi tidak terlihat

8. Memastikan tampilan data kosong tv show
    - aplikasi terbuka dan menampilkan beberapa view.
    - memastikan tab TV SHOW telah ditampilkan.
    - memberi tindakan klik pada tab TV SHOW
    - merubah tampilan tvshow_empty_tv menjadi terlihat
    - memastikan tvshow_empty_tv tampil pada layar
    - merubah tampilan tvshow_list_rv menjadi tidak terlihat

# Skenario unit test MovieViewModel
1. Memuat data movie:
    - Memanipulasi data ketika pemanggilan data movie di kelas repository.
    - Memastikan metode di kelas repository terpanggil.
    - Memastikan data movie tidak null.
    - Memastikan jumlah data movie sesuai dengan ekspektasi
    - Memastikan ada perubahan data di dalam LiveData sesuai yang diharapkan.

# Skenario unit test TvShowViewModel
1. Memuat data tv show:
    - Memanipulasi data ketika pemanggilan data tvshow di kelas repository.
    - Memastikan metode di kelas repository terpanggil.
    - Memastikan data tv show tidak null.
    - Memastikan jumlah data tv show sesuai dengan ekspektasi.
    - Memastikan ada perubahan data di dalam LiveData sesuai yang diharapkan.

# Skenario unit test DetailViewModel
1. Memuat detail catalogue Movie yang dipilih
    - Memanipulasi data ketika pemanggilan data Movie di kelas repository.
    - Memastikan metode di kelas repository terpanggil.
    - Melakukan pengecekan data movie apakah null atau tidak.
    - Membandingkan data movie sudah sesuai dengan yang diharapkan atau tidak:
        - memastikan data id sesuai ekspektasi
        - memastikan data name sesuai ekspektasi
        - memastikan data poster/posterPath sesuai ekspektasi
        - memastikan data overview sesuai ekspektasi
        - memastikan data genres sesuai ekspektasi
        - memastikan data voteAverage sesuai ekspektasi
        - memastikan data releaseDate sesuai ekspektasi
    - Memastikan ada perubahan data di dalam LiveData sesuai yang diharapkan.

2. Memuat detail catalogue TvShow yang dipilih
    - Memanipulasi data ketika pemanggilan data TvShow di kelas repository.
    - Memastikan metode di kelas repository terpanggil.
    - Melakukan pengecekan data TvShow apakah null atau tidak.
    - Membandingkan data TvShow sudah sesuai dengan yang diharapkan atau tidak:
        - memastikan data id sesuai ekspektasi
        - memastikan data name sesuai ekspektasi
        - memastikan data poster/posterPath sesuai ekspektasi
        - memastikan data overview sesuai ekspektasi
        - memastikan data genres sesuai ekspektasi
        - memastikan data voteAverage sesuai ekspektasi
        - memastikan data releaseDate sesuai ekspektasi
    - Memastikan ada perubahan data di dalam LiveData sesuai yang diharapkan.

# Skenario unit test Repository
1. Memuat data movie
    - Memastikan jika fungsi getMovies dipanggil, akan dijawab atau mendapatkan balikan nilai
    - Memastikan data movieEntities dari livedata tidak null
    - Memastikan jumlah data movie response sesuai yang diharapkan

2. Memuat detail movie
    - Memastikan jika fungsi getDetailMovie dipanggil, akan dijawab atau mendapatkan balikan nilai
    - Memastikan data movieDetailEntity dari livedata tidak null
    - Memastikan data detail movie sesuai yang diharapkan
        - memastikan data id sesuai ekspektasi
        - memastikan data name sesuai ekspektasi
        - memastikan data overview sesuai ekspektasi
        - memastikan data genres sesuai ekspektasi
        - memastikan data poster/posterPath sesuai ekspektasi
        - memastikan data voteAverage sesuai ekspektasi
        - memastikan data releaseDate sesuai ekspektasi

3. Memuat data tvshow
    - Memastikan jika fungsi getTvShows dipanggil, akan dijawab atau mendapatkan balikan nilai
    - Memastikan data tvShowEntities dari livedata tidak null
    - Memastikan jumlah data tvShow response sesuai yang diharapkan

4. Memuat detail tvshow
    - Memastikan jika fungsi getDetailTvShow dipanggil, akan dijawab atau mendapatkan balikan nilai
    - Memastikan data tvShowDetailEntity dari livedata tidak null
    - Memastikan data detail tvshow sesuai yang diharapkan
        - memastikan data id sesuai ekspektasi
        - memastikan data name sesuai ekspektasi
        - memastikan data overview sesuai ekspektasi
        - memastikan data genres sesuai ekspektasi
        - memastikan data poster/posterPath sesuai ekspektasi
        - memastikan data voteAverage sesuai ekspektasi
        - memastikan data releaseDate sesuai ekspektasi
